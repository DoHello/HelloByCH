package com.derbysoft.controller.appgms;

import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;

import net.sf.json.JSONObject;

import org.quartz.Job;
import org.quartz.JobExecutionContext;
import org.quartz.JobExecutionException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.derbysoft.entity.AlarmCallTime;
import com.derbysoft.entity.sys.SYS_User;
import com.derbysoft.jms.activemq.JpushSender;
import com.derbysoft.redis.service.UserService;

@Service
public class RedisCallQuartz implements Job {

	@Autowired
	private UserService userService;

	@Autowired
	private JpushSender jpushSender;

	@Override
	public void execute(JobExecutionContext arg0) throws JobExecutionException {
		// TODO Auto-generated method stub
		try {
			Map<String,AlarmCallTime> redisTodayCallTime = (Map<String, AlarmCallTime>) userService.getRedisTodayCallTime();
			if (redisTodayCallTime != null) {
				Iterator its = redisTodayCallTime.values().iterator();
				while (its.hasNext()) {
					JSONObject fromObject = JSONObject.fromObject(its.next());
					AlarmCallTime val = (AlarmCallTime) JSONObject.toBean(fromObject, AlarmCallTime.class);
//					AlarmCallTime val = (AlarmCallTime) its.next();
					long result = System.currentTimeMillis() - val.getL();
					if (result > Long.parseLong(userService.getJpushTime())*1000) {
						userService.delRedisAlarmCallTime(val.getId());
						Map<String, Object> m1 = new HashMap<String, Object>();
						m1.put("msg", "当前没有空闲警员，我们将通过指挥中心调派。给您带来的不便请谅解");
						m1.put("msgCode", "602");
						m1.put("styleNum", "3");
						m1.put("timeAlias", val);
						jpushSender.send(m1, "OUTNUMBER");
					}
				}
			}
//			System.out.println("执行了");
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
public static void main(String[] args) {
	AlarmCallTime vala =new AlarmCallTime();
	vala.setId("11223344");
	vala.setL(123456);
	Map redisTodayCallTime = new HashMap();
	redisTodayCallTime.put("11223344", vala);
	Iterator its = redisTodayCallTime.values().iterator();
	while (its.hasNext()) {
		System.out.println(its.next());
//		AlarmCallTime val = (AlarmCallTime) its.next();
//		long result = System.currentTimeMillis() - val.getL();
//		if (result > 300000) {
//			Map<String, Object> m1 = new HashMap<String, Object>();
//			m1.put("isReceive", "no");
//			m1.put("warning ", "当前没有空闲警员，我们将通过指挥中心调派。给您带来的不便请谅解");
//		}
	}
}
}
